<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.hwj</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	

	<name>Mind_Map</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
	
		<!-- spring aop -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<!-- spring data jpa -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!-- hibernate 依赖 -->
		<dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <version>1.0.2.Final</version>
        </dependency>
        <!-- JDBC连接数据库 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
			<exclusions>
           		<exclusion>
               		<groupId>org.apache.tomcat</groupId>
               		<artifactId>tomcat-jdbc</artifactId>
           		</exclusion>
       		</exclusions>
		</dependency>
		<!-- HikariCP 连接池依赖 -->
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<!-- <scope>runtime</scope> -->
		</dependency> 
		<!-- thymeleaf 模板   默认包含spring-boot-starter-web-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<!-- security 配置-->
		<dependency>
		  <groupId>org.springframework.boot</groupId>
		  <artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<!-- Redis 配置 -->
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>io.lettuce</groupId>
                    <artifactId>lettuce-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
		<dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
        </dependency>
		
		
		
		<!-- 导出为war需要的相关依赖--> 
		<!-- <dependency>  
            <groupId>org.springframework.boot</groupId>  
            <artifactId>spring-boot-starter-thymeleaf</artifactId> 
            <exclusions>
   			<exclusion>
     			<groupId>org.springframework.boot</groupId>
     			<artifactId>spring-boot-starter-tomcat</artifactId>
   			</exclusion>
 			</exclusions> 
		  </dependency>  
	      <dependency>
	  		 <groupId>javax.servlet</groupId>
	  			<artifactId>javax.servlet-api</artifactId>
	  			<scope>provided</scope>
		  </dependency>
		  <dependency>
  			<groupId>org.apache.tomcat</groupId>
  			<artifactId>tomcat-servlet-api</artifactId>
  			<version>8.0.36</version>
  			<scope>provided</scope>
		  </dependency> --> 
		<!-- 连接mysql数据库驱动 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- spring boot 内置tomcat -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- 只需引入spring-boot-devtools 即可实现热部署 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
        </dependency>
        <!--@ConfigurationProperties注解-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- Java Mail 依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<!-- net json 这个必须配置jdk的版本号 -->
		<dependency>
		    <groupId>net.sf.json-lib</groupId>
		    <artifactId>json-lib</artifactId>
		    <version>2.4</version>
		    <classifier>jdk15</classifier>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.thoughtworks.xstream/xstream -->
		<!-- xstrem 依赖 -->
		<dependency>
		    <groupId>com.thoughtworks.xstream</groupId>
		    <artifactId>xstream</artifactId>
		    <version>1.3.1</version>
		</dependency>
		<!-- LEGACYHTML5需要搭配一个额外的库NekoHTML才可用,解决严格的html验证问题 -->
		<dependency>  
       		<groupId>net.sourceforge.nekohtml</groupId>  
      		<artifactId>nekohtml</artifactId>  
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-actuator -->
		<!--监控SpringBoot应用程序  -->
		<dependency>
    		<groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		
		<!--远程shell(SSh)  -->
		<!-- <dependency>
    		<groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot-starter-remote-shell</artifactId>
		</dependency> -->
		  
		<!-- 单元测试相关依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- 后台验证码相关包（之后可去掉） -->
		<dependency>
		    <groupId>nl.captcha</groupId>
	 		<artifactId>simplecaptcha</artifactId>
			<version>1.2.1</version>
	    </dependency>
	
	    <!-- 狗皮药膏(打包时起作用) -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>2.15.0</version>
		</dependency>
		
		<!-- web-Socket -->
		<dependency>  
           <groupId>org.springframework.boot</groupId>  
           <artifactId>spring-boot-starter-websocket</artifactId>  
       </dependency>  
		
		<!-- fastJson -->
		<dependency>
		    <groupId>com.alibaba</groupId>
		    <artifactId>fastjson</artifactId>
		    <version>1.2.47</version>
		</dependency>
		
		<!-- 汉语言处理包 -->
		<dependency>
		    <groupId>com.hankcs</groupId>
		    <artifactId>hanlp</artifactId>
		    <version>portable-1.6.8</version>
		</dependency>
		
		
		
		
	</dependencies>

	<build>
		<plugins>
		    <!-- spring boot 的内置maven依赖 -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<fork>true</fork>
        			<source>1.8</source>  
       				<target>1.8</target>
       				<encoding>utf-8</encoding>
				</configuration>
			</plugin>
			<!-- maven 打包时跳过测试 -->
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
	            <groupId>org.springframework.boot</groupId>
	            <artifactId>spring-boot-maven-plugin</artifactId>
	            <dependencies>
	                <!-- 热部署 -->
	                <dependency>
	                    <groupId>org.springframework</groupId>
	                    <artifactId>springloaded</artifactId>
	                    <version>1.2.6.RELEASE</version>
	                </dependency>
	            </dependencies>
	        </plugin>

		</plugins>
	</build>

	<repositories>
            <repository>
                <id>ali</id>
                <name>ali Repository</name>
                <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
                <snapshots>
                    <enabled>false</enabled>
                </snapshots>
            </repository>
        </repositories>

</project>
